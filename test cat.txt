class cat(models.Model):
    car_cat=models.ForeignKey('car_cat',on_delete=models.CASCADE)
    mop_cat=models.ForeignKey('mop_cat',on_delete=models.CASCADE)
    def __str__(self):
        a= str(self.car_cat)
        s= str(self.mop_cat)
        d=" >> "
        return  a+d+s

class car_cat(models.Model):

    cat_name=models.CharField ( max_length=15)
    cat_main=models.ForeignKey ( 'self' , related_name='prod_category_set', 
                                limit_choices_to={'cat_main__isnull':True},
                                on_delete=models.CASCADE,blank=True,null=True)
    # cat_Sub=models.ForeignKey ( 'self' , related_name='prod_sub_category_set',
    #                             limit_choices_to={'cat_Sub__isnull':True ,
    #                                               'cat_main__isnull':False }
    #                             ,on_delete=models.CASCADE,blank=True,null=True)
    # cat_desc=models.TextField()


                                #  limit_choices_to={'cat_main__isnull':True
                                #      ,'cat_Sub__isnull':True}
                                #  , 

    def __str__(self):
        return self.cat_name


class mop_cat(models.Model):
    cat_name=models.CharField ( max_length=15)
    cat_main=models.ForeignKey ( 'self' , related_name='prod_category_set', 
                                limit_choices_to={'cat_main__isnull':True},
                                on_delete=models.CASCADE,blank=True,null=True)
    def __str__(self):
    
        return self.cat_name






#######################################################
# if self.main is None and self.sub is None:
        #     print("2")
        #     return str(self.name)
        
        # if self.main is not None and self.sub is None:
        #     print("3")
        #     return str(self.main) + " >>>" + str(self.name)
        
        # if self.main is not None and self.sub is not None:
        #     print("4")
        #     print(self.sub.main)

        #     return str(self.main) + " >>>" + str(self.sub) + " >>>" + str(self.name)